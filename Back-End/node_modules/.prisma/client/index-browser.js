
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.15.0
 * Query Engine version: 8fbc245156db7124f997f4cecdd8d1219e360944
 */
Prisma.prismaVersion = {
  client: "4.15.0",
  engine: "8fbc245156db7124f997f4cecdd8d1219e360944"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.AdotanteScalarFieldEnum = {
  cpf_adot: 'cpf_adot',
  rendafixa: 'rendafixa',
  aceitacaoAnimal: 'aceitacaoAnimal',
  animaisAtuais: 'animaisAtuais',
  animaisAntigos: 'animaisAntigos',
  descMoradores: 'descMoradores',
  motivacao: 'motivacao'
};

exports.Prisma.AnimaisScalarFieldEnum = {
  id_animal: 'id_animal',
  cnpj_pet: 'cnpj_pet',
  especie: 'especie',
  sexo: 'sexo',
  porte: 'porte',
  idade: 'idade',
  pelagem: 'pelagem',
  cor: 'cor',
  deficiencia: 'deficiencia',
  vacinas: 'vacinas',
  descricao: 'descricao',
  foto: 'foto'
};

exports.Prisma.Conta_banco_ongScalarFieldEnum = {
  cnpj: 'cnpj',
  numConta: 'numConta',
  agencia: 'agencia',
  operacao: 'operacao',
  pix: 'pix',
  qrcode: 'qrcode'
};

exports.Prisma.Endereco_ongScalarFieldEnum = {
  cnpj_end: 'cnpj_end',
  cep: 'cep',
  cidade: 'cidade',
  bairro: 'bairro',
  rua: 'rua',
  numero: 'numero'
};

exports.Prisma.Endereco_pessoasScalarFieldEnum = {
  cpf_end: 'cpf_end',
  cidade: 'cidade',
  bairro: 'bairro',
  rua: 'rua',
  numero: 'numero',
  tipoMoradia: 'tipoMoradia'
};

exports.Prisma.OngScalarFieldEnum = {
  cnpj: 'cnpj',
  nome: 'nome',
  email: 'email',
  senha: 'senha',
  facebook: 'facebook',
  whatsapp: 'whatsapp',
  descricao_ong: 'descricao_ong',
  foto: 'foto'
};

exports.Prisma.PessoasScalarFieldEnum = {
  cpf: 'cpf',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.VoluntariosScalarFieldEnum = {
  cpf_vol: 'cpf_vol',
  disponibilidade: 'disponibilidade',
  transporte: 'transporte',
  funcao: 'funcao'
};
exports.adotante_aceitacaoAnimal = {
  Sim: 'Sim',
  N_o: 'N_o'
};

exports.adotante_rendafixa = {
  Sim: 'Sim',
  N_o: 'N_o'
};

exports.animais_especie = {
  gato: 'gato',
  cachorro: 'cachorro'
};

exports.animais_idade = {
  Filhote: 'Filhote',
  Adulto: 'Adulto',
  Idoso: 'Idoso'
};

exports.animais_pelagem = {
  Curto: 'Curto',
  Longo: 'Longo'
};

exports.animais_porte = {
  P: 'P',
  M: 'M',
  G: 'G'
};

exports.animais_sexo = {
  F: 'F',
  M: 'M'
};

exports.voluntarios_disponibilidade = {
  Manh_: 'Manh_',
  Tarde: 'Tarde'
};

exports.voluntarios_funcao = {
  Limpeza: 'Limpeza',
  coleta: 'coleta',
  ajuda: 'ajuda'
};

exports.voluntarios_transporte = {
  Sim: 'Sim',
  N_o: 'N_o'
};

exports.Prisma.ModelName = {
  adotante: 'adotante',
  animais: 'animais',
  conta_banco_ong: 'conta_banco_ong',
  endereco_ong: 'endereco_ong',
  endereco_pessoas: 'endereco_pessoas',
  ong: 'ong',
  pessoas: 'pessoas',
  voluntarios: 'voluntarios'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
